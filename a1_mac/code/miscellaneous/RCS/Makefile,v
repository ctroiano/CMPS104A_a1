head	1.9;
access;
symbols;
locks;
comment	@# @;


1.9
date	2014.10.04.01.47.56;	author -;	state -;
branches;
next	1.8;

1.8
date	2011.09.23.01.48.16;	author -;	state -;
branches;
next	1.7;

1.7
date	2011.09.23.01.40.22;	author -;	state -;
branches;
next	1.6;

1.6
date	2011.09.23.01.40.02;	author -;	state -;
branches;
next	1.5;

1.5
date	2011.09.23.01.39.45;	author -;	state -;
branches;
next	1.4;

1.4
date	2011.09.23.01.38.54;	author -;	state -;
branches;
next	1.3;

1.3
date	2011.09.23.01.37.08;	author -;	state -;
branches;
next	1.2;

1.2
date	2011.09.23.01.35.28;	author -;	state -;
branches;
next	1.1;

1.1
date	2011.09.01.02.29.11;	author -;	state -;
branches;
next	;


desc
@@


1.9
log
@-
@
text
@# $Id: Makefile,v 1.8 2011-09-22 18:48:16-07 - - $

#
# The parser in this directory is a dummy useable for asg2.
# It allows any sequence of tokens to be used in any order
# without actually doing a syntax check.  It is only useful
# as a test harness for the scanner assignment.
#

GCC       = g++ -g -O0 -Wall -Wextra -std=gnu99
LISTING   = Listing.ps

all : printtokens addresses macros
	cid + Makefile

parser.c parser.h : parser.y
	cid + parser.y
	bison -dtv parser.y -o parser.c

printtokens : printtokens.c parser.c parser.h
	cid + printtokens.c
	${GCC} printtokens.c parser.c -o printtokens

% : %.c
	cid + $<
	${GCC} $< -o $@@

lis : all printtokens.output addresses.output macros.output Makefile
	mkpspdf ${LISTING} parser.y parser.h \
	   printtokens.c printtokens.output \
	   addresses.c addresses.output \
	   macros.c macros.output \
	   Makefile

clean :
	- rm parser.o parser.h parser.c \
	     printtokens printtokens.o printtokens.output \
	     parser.output printtokens.output

ci :
	cid + make-kw-table.perl \
	    parser.y printtokens.c Makefile \

%.output : %
	./$< >$@@

@


1.8
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.7 2011-09-22 18:40:22-07 - - $
d10 1
a10 2
GCC       = gcc -g -O0 -Wall -Wextra -std=gnu99
LINT      = lint -Xa -fd -m -u -x -errchk=%all
d13 1
a13 1
all : printtokens addresses macros test-strhash
a21 1
	${LINT} printtokens.c
a23 5
test-strhash : test-strhash.c strhash.h strhash.c
	cid + test-strhash.c strhash.h strhash.c
	${LINT} test-strhash.c strhash.c
	${GCC} test-strhash.c strhash.c -o test-strhash

a25 1
	${LINT} $<
d28 1
a28 2
lis : all printtokens.output addresses.output macros.output \
	   test-strhash.output Makefile
a32 1
	   test-strhash.c strhash.h strhash.c test-strhash.output \
d41 1
a41 1
	cid + strhash.h strhash.c make-kw-table.perl \
@


1.7
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.6 2011-09-22 18:40:02-07 - - $
d14 1
a14 1
all : printtokens addresses macros test-strhash uintptr_t
d37 1
a37 1
	   test-strhash.output uintptr_t.output Makefile
d42 1
a42 2
	   test-strhash.c strhash.h strhash.c test-strhash.output
	   uintptr_t.c uintptr_t.output
@


1.6
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.5 2011-09-22 18:39:45-07 - - $
d37 1
a37 1
	   strhash.output uintptr_t.output Makefile
d42 1
a42 1
	   test-strhash.c strhash.h strhash.c strhash.output
@


1.5
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.3 2011-09-22 18:37:08-07 - - $
d56 1
a56 1
	$< >$@@
@


1.4
log
@-
@
text
@d36 2
a37 1
lis : all printtokens.output Makefile
@


1.3
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.2 2011-09-22 18:35:28-07 - - $
d37 1
a37 1
	mkpspdf ${LISTING} parser.h parser.y \
@


1.2
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.1 2011-08-31 19:29:11-07 - - $
d14 1
a14 1
all: parser.c parser.h printtokens
d17 1
a17 1
parser.c parser.h: parser.y
d21 1
a21 1
printtokens: printtokens.c parser.c parser.h
d26 1
a26 1
test-strhash: test-strhash.c strhash.h strhash.c
d31 1
a31 1
%: %.c
d36 1
a36 1
lis: all printtokens.output Makefile
d54 1
a54 1
%.output: %
@


1.1
log
@-
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.3 2010-09-23 17:39:57-07 - - $
d10 3
a12 3
CCOPT   = -D__EXTENSIONS__ -g -xO0 -Xc
LINTOPT = -D__EXTENSIONS__ -Xa -fd -m -u -x -errchk=%all,no%longptr64
LISTING = Code.Listing.ps
d14 1
a14 1
all: parser.c parser.h printtokens keywords
d19 1
a19 1
	M4=gm4 bison -dtv parser.y -o parser.c
d23 2
a24 2
	lint ${LINTOPT} printtokens.c
	cc ${CCOPT} printtokens.c parser.c -o printtokens
d26 9
a34 7
keywords: keywords.c
	lint ${LINTOPT} keywords.c
	cc ${CCOPT} keywords.c -o keywords

keywords.c: parser.h make-kw-table.perl
	cid + make-kw-table.perl
	make-kw-table.perl parser.h keywords.c
d36 1
a36 1
lis: printtokens.output keywords.output Makefile
a37 1
	   keywords.c keywords.output \
d39 5
a43 1
	   make-kw-table.perl Makefile
a46 1
	     keywords keywords.c keywords.output \
d48 1
a48 1
	     keywords.output parser.output printtokens.output
@
